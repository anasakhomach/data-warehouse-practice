cell code:
  # --- 1. Define the SQL Query for the part-to-whole analysis ---
  sql_query_3 = """
      WITH category_sales AS (
          SELECT
              p.category,
              SUM(f.sales_amount) AS total_sales
          FROM gold.fact_sales f
          LEFT JOIN gold.dim_products p
              ON p.product_key = f.product_key
          GROUP BY p.category
      )
      SELECT
          category,
          total_sales,
          -- We cast to NUMERIC for precision in PostgreSQL
          ROUND((total_sales::NUMERIC / SUM(total_sales) OVER ()) * 100, 2) AS percentage_of_total
      FROM category_sales
      ORDER BY total_sales DESC;
  """

  # --- 2. Execute the Query and Load into a new DataFrame ---
  try:
      # Use pandas to execute the query
      category_sales_df = pd.read_sql_query(sql_query_3, conn)
      print("Successfully loaded category sales data.")

      # --- 3. Create the Donut Chart with Plotly Express ---
      fig = px.pie(
          category_sales_df,
          names='category',
          values='total_sales', # For a pie chart, we use the raw values, and Plotly calculates the percentages
          title='Percentage of Total Sales by Product Category',
          hole=0.4  # This is the parameter that creates the donut hole
      )

      # Improve the layout
      fig.update_traces(textinfo='percent+label', pull=[0.05, 0, 0]) # Pull the first slice out slightly

      # Show the figure
      fig.show()
---

cell output:
ell In[8], line 40
    fig.show()
              ^
_IncompleteInputError: incomplete input
